name: Build and Release

on:
  push:
    branch:
      - 'main'
jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23.4'
        cache-dependency-path: app/go.sum
    - name: Install dependencies (if needed)
      working-directory: ./app
      run: |
        go mod tidy

    - name: Build binaries
      working-directory: app
      run: |
        GOOS=linux GOARCH=amd64 go build -o manscr-li
        GOOS=windows GOARCH=amd64 go build -o manscr-win.exe
        GOOS=darwin GOARCH=amd64 go build -o manscr-mac-x64

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ManifestScriptor
        path: |
          app/manscr-li
          app/manscr-win.exe
          app/manscr-mac-x64
        if-no-files-found: error
        retention-days: 1
  tag:
    needs: build
    runs-on: ubuntu-24.04
    outputs:
      tag_name: ${{ steps.set-tag.outputs.tag_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main
      - name: Get latest tag
        id: get-latest-tag
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1` || echo "v0.0.0")
          echo "latest_tag=$latest_tag" >> $GITHUB_ENV
      - name: Generate new tag
        id: set-tag
        run: |
          IFS='.' read -r -a parts <<< "${latest_tag#v}"
          major=${parts[0]}
          minor=${parts[1]}
          patch=${parts[2]}
          new_tag="v$major.$minor.$((patch + 1))"
          echo "new_tag=$new_tag" >> $GITHUB_ENV
          echo $new_tag
          echo "tag_name=$new_tag" >> $GITHUB_OUTPUT
        env:
          latest_tag: ${{ env.latest_tag }}
      - name: Push new tag using token
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ steps.set-tag.outputs.tag_name }}
          git remote set-url origin https://x-access-token:${{ secrets.REALESE_KEY }}@github.com/${{ github.repository }}
          git push origin ${{ steps.set-tag.outputs.tag_name }}

  release:
    needs: tag
    runs-on: ubuntu-24.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
        #with:
        #fetch-depth: 0
        #ref: main
    - name: Generate Changelog
      run: .github/workflows/generator ${{ github.workspace }}-CHANGELOG.md main
    - name: Generate release changelog
      uses: varrcan/generate-pretty-changelog-action@v1
      with:
        config: .github/changelog.yaml
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: ManifestScriptor
    - name: Create GitHub release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ needs.tag.outputs.tag_name }}
        body_path: CHANGELOG.md
        files: |
          manscr-mac-x64
          manscr-win.exe
          manscr-li
      env:
        GITHUB_TOKEN: ${{ secrets.REALESE_KEY }}

